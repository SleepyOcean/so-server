package com.sleepy.file.img.so.so_gallery_tag_map.generated;

import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap;
import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMapImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.runtime.core.util.ResultSetUtil.getLong;

/**
 * The generated Sql Adapter for a {@link
 * com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoGalleryTagMapSqlAdapter implements SqlAdapter<SoGalleryTagMap> {

    private final TableIdentifier<SoGalleryTagMap> tableIdentifier;

    protected GeneratedSoGalleryTagMapSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("dev", "dev", "so_gallery_tag_map");
    }

    protected SoGalleryTagMap apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setTagId(getLong(resultSet, 1 + offset))
                .setObjId(resultSet.getString(2 + offset))
                ;
    }

    protected SoGalleryTagMapImpl createEntity() {
        return new SoGalleryTagMapImpl();
    }

    @Override
    public TableIdentifier<SoGalleryTagMap> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, SoGalleryTagMap> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, SoGalleryTagMap> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}