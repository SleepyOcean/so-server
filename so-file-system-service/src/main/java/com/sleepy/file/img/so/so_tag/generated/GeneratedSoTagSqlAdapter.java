package com.sleepy.file.img.so.so_tag.generated;

import com.sleepy.file.img.so.so_tag.SoTag;
import com.sleepy.file.img.so.so_tag.SoTagImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.runtime.core.util.ResultSetUtil.getLong;

/**
 * The generated Sql Adapter for a {@link com.sleepy.file.img.so.so_tag.SoTag}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoTagSqlAdapter implements SqlAdapter<SoTag> {

    private final TableIdentifier<SoTag> tableIdentifier;

    protected GeneratedSoTagSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("dev", "dev", "so_tag");
    }

    protected SoTag apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(getLong(resultSet, 1 + offset))
                .setTagName(resultSet.getString(2 + offset))
                ;
    }

    protected SoTagImpl createEntity() {
        return new SoTagImpl();
    }

    @Override
    public TableIdentifier<SoTag> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, SoTag> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, SoTag> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}