package com.sleepy.file.img.so.so_gallery_tag_map.generated;

import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap;
import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMapImpl;
import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMapManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoGalleryTagMapManagerImpl
        extends AbstractManager<SoGalleryTagMap>
        implements GeneratedSoGalleryTagMapManager {

    private final TableIdentifier<SoGalleryTagMap> tableIdentifier;

    protected GeneratedSoGalleryTagMapManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("dev", "dev", "so_gallery_tag_map");
    }

    @Override
    public SoGalleryTagMap create() {
        return new SoGalleryTagMapImpl();
    }

    @Override
    public TableIdentifier<SoGalleryTagMap> getTableIdentifier() {
        return tableIdentifier;
    }

    @Override
    public Stream<Field<SoGalleryTagMap>> fields() {
        return SoGalleryTagMapManager.FIELDS.stream();
    }

    @Override
    public Stream<Field<SoGalleryTagMap>> primaryKeyFields() {
        return Stream.empty();
    }
}