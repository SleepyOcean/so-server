package com.sleepy.file.img.so.so_gallery_tag_map.generated;

import com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.sleepy.file.img.so.so_gallery_tag_map.SoGalleryTagMap}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoGalleryTagMapImpl implements SoGalleryTagMap {

    private long tagId;
    private String objId;

    protected GeneratedSoGalleryTagMapImpl() {
    }

    @Override
    public long getTagId() {
        return tagId;
    }

    @Override
    public String getObjId() {
        return objId;
    }

    @Override
    public SoGalleryTagMap setTagId(long tagId) {
        this.tagId = tagId;
        return this;
    }

    @Override
    public SoGalleryTagMap setObjId(String objId) {
        this.objId = objId;
        return this;
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("tagId = " + Objects.toString(getTagId()));
        sj.add("objId = " + Objects.toString(getObjId()));
        return "SoGalleryTagMapImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof SoGalleryTagMap)) {
            return false;
        }
        final SoGalleryTagMap thatSoGalleryTagMap = (SoGalleryTagMap) that;
        if (this.getTagId() != thatSoGalleryTagMap.getTagId()) {
            return false;
        }
        if (!Objects.equals(this.getObjId(), thatSoGalleryTagMap.getObjId())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getTagId());
        hash = 31 * hash + Objects.hashCode(getObjId());
        return hash;
    }
}