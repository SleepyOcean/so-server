package com.sleepy.file.img.so.so_gallery.generated;

import com.sleepy.file.img.so.so_gallery.SoGallery;
import com.sleepy.file.img.so.so_gallery.SoGalleryImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * The generated Sql Adapter for a {@link
 * com.sleepy.file.img.so.so_gallery.SoGallery} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoGallerySqlAdapter implements SqlAdapter<SoGallery> {

    private final TableIdentifier<SoGallery> tableIdentifier;

    protected GeneratedSoGallerySqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("dev", "dev", "so_gallery");
    }

    protected SoGallery apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
                .setId(resultSet.getString(1 + offset))
                .setSize(resultSet.getString(2 + offset))
                .setFormat(resultSet.getString(3 + offset))
                .setPath(resultSet.getString(4 + offset))
                .setResolution(resultSet.getString(5 + offset))
                .setDescription(resultSet.getString(6 + offset))
                .setTitle(resultSet.getString(7 + offset))
                .setTag(resultSet.getString(8 + offset))
                .setCreateTime(resultSet.getTimestamp(9 + offset))
                .setUpdateTime(resultSet.getTimestamp(10 + offset))
                ;
    }

    protected SoGalleryImpl createEntity() {
        return new SoGalleryImpl();
    }

    @Override
    public TableIdentifier<SoGallery> identifier() {
        return tableIdentifier;
    }

    @Override
    public SqlFunction<ResultSet, SoGallery> entityMapper() {
        return entityMapper(0);
    }

    @Override
    public SqlFunction<ResultSet, SoGallery> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}