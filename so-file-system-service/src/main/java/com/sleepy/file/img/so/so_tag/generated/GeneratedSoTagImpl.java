package com.sleepy.file.img.so.so_tag.generated;

import com.sleepy.file.img.so.so_tag.SoTag;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.sleepy.file.img.so.so_tag.SoTag}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 *
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSoTagImpl implements SoTag {

    private long id;
    private String tagName;

    protected GeneratedSoTagImpl() {
    }

    @Override
    public long getId() {
        return id;
    }

    @Override
    public String getTagName() {
        return tagName;
    }

    @Override
    public SoTag setId(long id) {
        this.id = id;
        return this;
    }

    @Override
    public SoTag setTagName(String tagName) {
        this.tagName = tagName;
        return this;
    }

    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = " + Objects.toString(getId()));
        sj.add("tagName = " + Objects.toString(getTagName()));
        return "SoTagImpl " + sj.toString();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (!(that instanceof SoTag)) {
            return false;
        }
        final SoTag thatSoTag = (SoTag) that;
        if (this.getId() != thatSoTag.getId()) {
            return false;
        }
        if (!Objects.equals(this.getTagName(), thatSoTag.getTagName())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getTagName());
        return hash;
    }
}